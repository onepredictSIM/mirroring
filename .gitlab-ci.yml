stages:
  - CI-Test
  - build
  - deploy
 
CI-Test:
  stage: CI-Test
  image: python:3.9
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq curl git python3 python3-distutils
    - export POETRY_HOME=/root/.poetry
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 -
    - poetry config virtualenvs.create true
    - poetry config virtualenvs.in-project true
    - poetry config virtualenvs.path "$POETRY_HOME"
    - poetry env use 3.9
  cache:
    paths:
      - .venv/
  script:
    - if [[ $(git diff --name-only HEAD^ HEAD pyproject.toml) ]]; then poetry export -f requirements.txt --without-hashes > requirements.txt; fi
    - if [[ ! -f requirements.txt ]]; then poetry export -f requirements.txt --without-hashes > requirements.txt; fi
    - poetry install --no-root --no-dev --no-interaction
    - bash ./scripts/hooks.sh && bash ./scripts/format.sh . && bash ./scripts/lint.sh . && bash ./scripts/typecheck.sh .
  only:
    refs:
      - tags
  tags:
    - test:v1

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build -t onepredictimg:$CI_COMMIT_TAG .
    - docker tag onepredictimg:$CI_COMMIT_TAG 10.10.70.4:5000/repository/docker-hosted/onepredictimg:$CI_COMMIT_TAG
    - docker tag onepredictimg:$CI_COMMIT_TAG 10.10.70.4:5000/repository/docker-hosted/onepredictimg:$CI_COMMIT_TAG
    - docker tag onepredictimg:$CI_COMMIT_TAG 10.10.70.4:5000/repository/docker-hosted/onepredictimg:latest
  only:
    refs:
      - tags
  tags:
    - test:v1

deploy:
  stage: deploy
  variables:
    RELEASE_VERSION: "$CI_COMMIT_TAG"
  script:
    - echo $DOCKER_REGISTRY_PASS | docker login -u admin --password-stdin http://10.10.70.4:5000
    - docker push 10.10.70.4:5000/repository/docker-hosted/onepredictimg:$RELEASE_VERSION
    - docker push 10.10.70.4:5000/repository/docker-hosted/onepredictimg:latest
  only:
    refs:
      - tags
  tags:
    - test:v1



